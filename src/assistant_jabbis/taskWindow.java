/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package assistant_jabbis;

import com.formdev.flatlaf.FlatDarkLaf;
import databaseConnection.databaseConnect;
import java.sql.Connection;
import java.sql.PreparedStatement;

import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class taskWindow extends javax.swing.JFrame {
    private Connection con;

    /**
     * Creates new form taskWindow
     */
    public taskWindow() {
        initComponents();
        con = databaseConnect.getConnection();
        loadData();

    }
    private void loadData(){
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0); // Clear existing data

        try {
            con = databaseConnect.getConnection();

            String query1 = "SELECT * FROM setjabbis";
            PreparedStatement prstmt = con.prepareStatement(query1);
            ResultSet rs1 = prstmt.executeQuery();
            rs1.next();
            int userid = rs1.getInt("userid");
            
            
            
            String query = "SELECT * FROM todoList WHERE userid = ?";
            PreparedStatement prstmts = con.prepareStatement(query);
            prstmts.setInt(1, userid);
            
            ResultSet rs = prstmts.executeQuery();
            

            while (rs.next()) {
                // Retrieve data from the database
                int id = rs.getInt("id");
                String todo = rs.getString("list");
                String subject = rs.getString("subject");
                String dodate = rs.getString("do");
                String deadline = rs.getString("deadline");
                // Add row to the table model
                System.out.println(id + " " + todo + " " + subject + " " + dodate + " " + deadline);
                model.addRow(new Object[]{id, todo, subject, dodate, deadline});

            }
        } catch (Exception e) {
            System.out.println("Error: " + e.getMessage());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel10 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        DonetaskBtn = new javax.swing.JButton();
        SearchTaskF = new javax.swing.JTextField();
        jSeparator7 = new javax.swing.JSeparator();
        searchtask = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setBackground(new java.awt.Color(102, 102, 102));
        jLabel6.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 255, 51));
        jLabel6.setText("TASK TO DO");
        jPanel10.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jTable2.setBackground(new java.awt.Color(60, 63, 65));
        jTable2.setFont(new java.awt.Font("Impact", 0, 14)); // NOI18N
        jTable2.setForeground(new java.awt.Color(0, 255, 51));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "TASK", "SUBJECT", "DO", "DEADLINE"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jPanel10.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 860, 350));

        DonetaskBtn.setBackground(new java.awt.Color(51, 51, 51));
        DonetaskBtn.setFont(new java.awt.Font("Impact", 0, 14)); // NOI18N
        DonetaskBtn.setForeground(new java.awt.Color(0, 255, 51));
        DonetaskBtn.setText("Done Task");
        DonetaskBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DonetaskBtnActionPerformed(evt);
            }
        });
        jPanel10.add(DonetaskBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 420, -1, -1));

        SearchTaskF.setBackground(new java.awt.Color(60, 63, 65));
        SearchTaskF.setFont(new java.awt.Font("Impact", 0, 14)); // NOI18N
        SearchTaskF.setForeground(new java.awt.Color(0, 255, 0));
        SearchTaskF.setBorder(null);
        SearchTaskF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchTaskFActionPerformed(evt);
            }
        });
        jPanel10.add(SearchTaskF, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, 283, 40));

        jSeparator7.setForeground(new java.awt.Color(0, 255, 0));
        jPanel10.add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, 280, 30));

        searchtask.setBackground(new java.awt.Color(51, 51, 51));
        searchtask.setFont(new java.awt.Font("Impact", 0, 14)); // NOI18N
        searchtask.setForeground(new java.awt.Color(0, 255, 51));
        searchtask.setText("Search");
        searchtask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchtaskActionPerformed(evt);
            }
        });
        jPanel10.add(searchtask, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 90, 40));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/vecteezy_computer-processor-chip-technology-background-design-blue_11641945.jpg"))); // NOI18N
        jLabel16.setText("czxzxczxcxzc");
        jPanel10.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 460));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 465, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void DonetaskBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DonetaskBtnActionPerformed
        // TODO add your handling code here:
        int selected = jTable2.getSelectedRow();
        System.out.println(selected);
        if (selected != 1) {
            try {
                int id = Integer.parseInt(jTable2.getValueAt(selected, 0).toString());
                String query = "SELECT * FROM todoList WHERE id = ?";
                PreparedStatement prstmt = con.prepareStatement(query);
                prstmt.setInt(1, id);

                ResultSet rs = prstmt.executeQuery();
                if (rs.next()) {
                    String task = rs.getString("list");
                    String subject = rs.getString("subject");

                    String query2 = "INSERT INTO Completed_task(task,subject)VALUES(?,?)";
                    PreparedStatement pstmt2 = con.prepareStatement(query2);
                    pstmt2.setString(1, task);
                    pstmt2.setString(2, subject);
                    pstmt2.executeUpdate();

                    JOptionPane.showMessageDialog(this, "Are you sure your Done with this task", "Success", JOptionPane.YES_NO_CANCEL_OPTION);

                    String queryDelete = "DELETE FROM todoList WHERE id = ?";
                    PreparedStatement deleteStmt = con.prepareStatement(queryDelete);
                    deleteStmt.setInt(1, id);
                    deleteStmt.executeUpdate();

                    // Remove the row from the table model
                    ((DefaultTableModel) jTable2.getModel()).removeRow(selected);

                } else {
                    JOptionPane.showMessageDialog(this, "No row selected.", "Error", JOptionPane.ERROR_MESSAGE);

                }

            } catch (Exception e) {

            }
        } else {
            JOptionPane.showMessageDialog(this, "No row selected.", "Error", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_DonetaskBtnActionPerformed

    private void SearchTaskFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchTaskFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchTaskFActionPerformed

    private void searchtaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchtaskActionPerformed
        // TODO add your handling code here:
        // Retrieve the search input
        String userInput = SearchTaskF.getText().trim();

        // Clear existing data in the table
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);

        try {
            // Establish a database connection
            con = databaseConnect.getConnection();

            // Define a query to search for alarms matching the user input
            String query = "SELECT * FROM todoList WHERE list LIKE ? OR subject LIKE ?";
            PreparedStatement prstmt = con.prepareStatement(query);
            prstmt.setString(1, "%" + userInput + "%");
            prstmt.setString(2, "%" + userInput + "%");

            // Execute the query
            ResultSet rs = prstmt.executeQuery();

            // Populate the table with the search results
            while (rs.next()) {
                // Retrieve data from the database
                int id = rs.getInt("id");
                String todo = rs.getString("list");
                String subject = rs.getString("subject");
                String dodate = rs.getString("do");
                String deadline = rs.getString("deadline");
                // Add row to the table model
                model.addRow(new Object[]{id, todo, subject, dodate, deadline});
            }

            // Notify user if no records are found
            if (model.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "No matching records found!");
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error searching records: " + e.getMessage());
        }
    }//GEN-LAST:event_searchtaskActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(taskWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(taskWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(taskWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(taskWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        FlatDarkLaf.setup();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new taskWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DonetaskBtn;
    private javax.swing.JTextField SearchTaskF;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton searchtask;
    // End of variables declaration//GEN-END:variables
}
